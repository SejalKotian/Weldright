{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOTd7EUIu1VGsIHYxCZPVZh"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"standard"},"cells":[{"cell_type":"code","execution_count":19,"metadata":{"id":"3xCESIzFey4H","executionInfo":{"status":"ok","timestamp":1670862959735,"user_tz":-330,"elapsed":6,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import glob\n","import pickle\n","from scipy import stats"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xQx-yOFAe8ll","executionInfo":{"status":"ok","timestamp":1670862357320,"user_tz":-330,"elapsed":23624,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}},"outputId":"e380cfb0-333b-4c11-9d36-4ed54a7b748d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["pip install imbalanced_ensemble"],"metadata":{"id":"dTSDOF8PjbST"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df = pd.DataFrame(pd.read_csv('/content/drive/MyDrive/Techfest/WeldRight_Dataset.csv'))\n","df.drop(df.filter(regex=\"Unname\"),axis=1, inplace=True)\n","df2=df[['Current','Humidity','Temperature','Flow','Job Temp','Voltage','Defect','Order Operation No']].copy()\n","df2['Defect'] = df2['Defect'].replace(['No Defect0','No Defect40','No Defect57','No Defect58','No Defect59','No Defect60','No Defect61','No Defect62','No Defect63','No Defect64','No Defect65','No Defect66','No Defect67','No Defect68','No Defect69','No Defect70','No Defect71','No Defect72','No Defect73','No Defect74','No Defect75','No Defect76','No Defect77','No Defect78','No Defect79','No Defect80','No Defect81','No Defect82','No Defect83','No Defect84','No Defect85','No Defect86','No Defect87','No Defect88','No Defect90','No Defect99'],'No Defect')\n","df2['Defect'] = df2['Defect'].replace(['Porosity71','Porosity75','Porosity76','Porosity80','Porosity86'],'Porosity')\n","df2['Defect']=df2['Defect'].replace(['Tungsten Inclusion67','Tungsten Inclusion71','Tungsten Inclusion72','Tungsten Inclusion75','Tungsten Inclusion76','Tungsten Inclusion77','Tungsten Inclusion78','Tungsten Inclusion80'],'Tungsten Inclusion')\n","df2.drop([0],axis=0,inplace=True)\n","df2.replace([np.inf, -np.inf], np.nan, inplace=True)\n","df2.fillna(0, inplace=True)\n","df2.drop(df2[df2['Order Operation No']=='-'].index,axis=0,inplace=True)\n","df2.replace('180-', 180, inplace=True)\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b1RITGGYkE8L","executionInfo":{"status":"ok","timestamp":1670862368166,"user_tz":-330,"elapsed":8520,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}},"outputId":"16905731-f39d-4c03-802e-04bfac2e19c8"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/IPython/core/interactiveshell.py:3326: DtypeWarning: Columns (0,2,3,6,7,8,9,10,11,22,27,32,37,42,47,52,57,62,67,72,77,82,87) have mixed types.Specify dtype option on import or set low_memory=False.\n","  exec(code_obj, self.user_global_ns, self.user_ns)\n"]}]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","df2 = df2.sample(frac=1)\n","X = df2.drop(['Defect'], axis=1)\n","y = df2['Defect']\n","Y_ed = df2['Defect'].copy()\n","Y_ed.replace(['Porosity','Tungsten Inclusion'],'Defect', inplace=True)"],"metadata":{"id":"e3zq4d0AxIfM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_n_train, x_n_test, y_n_train, y_n_test = train_test_split(\n"," X, y, test_size=0.1, random_state = 42,shuffle = False)"],"metadata":{"id":"wnzdlvc7q72W"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["y_n_test_d = y_n_test.copy()\n","y_n_test_d.replace(['Porosity','Tungsten Inclusion'],'Defect', inplace=True)"],"metadata":{"id":"iuQQmR1KA7Aj"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x_train, x_test, y_train, y_test = train_test_split(\n"," X, Y_ed, test_size=0.1, random_state = 42, shuffle = False)"],"metadata":{"id":"Qywi5y-gkZfu"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["path = '/content/drive/MyDrive/Techfest/Models/brf models'\n","files = glob.glob(path + '/*.sav')\n","models = []\n","for f in files:\n","  loaded_model = pickle.load(open(f, 'rb'))\n","  models.append(loaded_model)\n","x_n_test = x_n_test.astype(float)  "],"metadata":{"id":"dNWaxK66fyb5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from sklearn.metrics import classification_report\n","yhats = [model.predict(x_test) for model in models]\n","yhats = np.array(yhats)\n","yhats1 = yhats[:-1,:]\n","yhats2 = yhats[-1,:]"],"metadata":{"id":"jxN846VlfVyd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["outcomes, _ = stats.mode(yhats1)\n","outcomes = np.transpose(outcomes)\n","print(classification_report(y_n_test_d,outcomes))\n","yhats2 = np.transpose(yhats2)\n"],"metadata":{"id":"v9gGjgWOJdtz","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1670862953668,"user_tz":-330,"elapsed":5249,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}},"outputId":"20504808-5fcf-4719-cc29-1618ea70cbec"},"execution_count":18,"outputs":[{"output_type":"stream","name":"stdout","text":["              precision    recall  f1-score   support\n","\n","      Defect       0.04      0.98      0.07       524\n","   No Defect       1.00      0.84      0.91     82156\n","\n","    accuracy                           0.84     82680\n","   macro avg       0.52      0.91      0.49     82680\n","weighted avg       0.99      0.84      0.91     82680\n","\n"]}]},{"cell_type":"code","source":["outcomes = np.reshape(outcomes,(-1,1))\n","yhats2 = np.reshape(yhats2,(-1,1))"],"metadata":{"id":"u0v4cXOESXD0","executionInfo":{"status":"ok","timestamp":1670864634808,"user_tz":-330,"elapsed":822,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["yhats2"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"5ChWynOiSlnD","executionInfo":{"status":"ok","timestamp":1670864648687,"user_tz":-330,"elapsed":676,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}},"outputId":"8ea07afc-de92-47f8-ad07-49080106dada"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([['Tungsten Inclusion'],\n","       ['Porosity'],\n","       ['Porosity'],\n","       ...,\n","       ['Porosity'],\n","       ['Porosity'],\n","       ['Tungsten Inclusion']], dtype=object)"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["for i in range(len(outcomes)):\n","  if(outcomes[i]=='Defect'):\n","    outcomes[i] = yhats2[i]"],"metadata":{"id":"AbFDLDN-Nqso"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["path = '/content/drive/MyDrive/Techfest/Models/p_ti_nd/brf_p_ti_89_93.sav'\n","p_ti = pickle.load(open(path, 'rb'))\n"],"metadata":{"id":"wcrjvu6WjvLY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = p_ti.predict(x_n_test)\n","print(classification_report(y_n_test,prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SgTUCpOkAZPq","executionInfo":{"status":"ok","timestamp":1670861181833,"user_tz":-330,"elapsed":3935,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}},"outputId":"bda88e42-652b-4bae-aeab-b7486e32adae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["                    precision    recall  f1-score   support\n","\n","         No Defect       0.00      0.00      0.00     82114\n","          Porosity       0.00      0.95      0.00       119\n","Tungsten Inclusion       0.02      0.93      0.04       447\n","\n","          accuracy                           0.01     82680\n","         macro avg       0.01      0.63      0.02     82680\n","      weighted avg       0.00      0.01      0.00     82680\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["path = '/content/drive/MyDrive/Techfest/Models/p_ti_nd/rfc_nd_ti_85_87.sav'\n","nd_ti = pickle.load(open(path, 'rb'))\n"],"metadata":{"id":"Uk_av5jjAJno"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction = nd_ti.predict(x_n_test)\n","print(classification_report(y_n_test,prediction))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"rmvPX7HVu0iU","executionInfo":{"status":"ok","timestamp":1670859832809,"user_tz":-330,"elapsed":3634,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}},"outputId":"34fc3eb2-69d5-4882-d19f-b9614b358fc5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n","/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]},{"output_type":"stream","name":"stdout","text":["                    precision    recall  f1-score   support\n","\n","         No Defect       1.00      0.85      0.92     82114\n","          Porosity       0.00      0.00      0.00       119\n","Tungsten Inclusion       0.03      0.87      0.06       447\n","\n","          accuracy                           0.85     82680\n","         macro avg       0.34      0.57      0.33     82680\n","      weighted avg       0.99      0.85      0.91     82680\n","\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.8/dist-packages/sklearn/metrics/_classification.py:1318: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.\n","  _warn_prf(average, modifier, msg_start, len(result))\n"]}]},{"cell_type":"code","source":["for i in range(len(outcomes)):\n","  if (outcome[i] == 'Defect'):\n","    outcome[i] = prediction[i]\n"],"metadata":{"id":"N0Z8kB9Psr_L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"YGk2m9X16vOr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["prediction"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HOHgGO4_7HmH","executionInfo":{"status":"ok","timestamp":1670859841926,"user_tz":-330,"elapsed":59,"user":{"displayName":"Saad Ahmed","userId":"10444591549719417099"}},"outputId":"80ae166b-3887-4984-d0ec-a26df1fa3fb3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['No Defect', 'No Defect', 'No Defect', ..., 'No Defect',\n","       'No Defect', 'Tungsten Inclusion'], dtype=object)"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["print(classification_report(y_n_test,outcomes))"],"metadata":{"id":"wulvEDqHuB3Y"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"0-zMXyq07acx"},"execution_count":null,"outputs":[]}]}